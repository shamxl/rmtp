// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.3
// 	protoc        v4.25.1
// source: rmtp.proto

package rmtp

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Errors int32

const (
	Errors_TAMPERED                Errors = 0
	Errors_CONNECTION_TIMEOUT      Errors = 1
	Errors_CONNECTION_DROPOUT      Errors = 2
	Errors_CHUNK_MISSING           Errors = 3
	Errors_INCOMPLETE_DATA         Errors = 4
	Errors_BUFFER_OVERFLOW         Errors = 5
	Errors_HIGH_LATENCY            Errors = 6
	Errors_DUPLICATE_MESSAGE       Errors = 7
	Errors_ACKNOWLEDGEMENT_FAILURE Errors = 8
	Errors_INTERNAL_ERROR          Errors = 9
)

// Enum value maps for Errors.
var (
	Errors_name = map[int32]string{
		0: "TAMPERED",
		1: "CONNECTION_TIMEOUT",
		2: "CONNECTION_DROPOUT",
		3: "CHUNK_MISSING",
		4: "INCOMPLETE_DATA",
		5: "BUFFER_OVERFLOW",
		6: "HIGH_LATENCY",
		7: "DUPLICATE_MESSAGE",
		8: "ACKNOWLEDGEMENT_FAILURE",
		9: "INTERNAL_ERROR",
	}
	Errors_value = map[string]int32{
		"TAMPERED":                0,
		"CONNECTION_TIMEOUT":      1,
		"CONNECTION_DROPOUT":      2,
		"CHUNK_MISSING":           3,
		"INCOMPLETE_DATA":         4,
		"BUFFER_OVERFLOW":         5,
		"HIGH_LATENCY":            6,
		"DUPLICATE_MESSAGE":       7,
		"ACKNOWLEDGEMENT_FAILURE": 8,
		"INTERNAL_ERROR":          9,
	}
)

func (x Errors) Enum() *Errors {
	p := new(Errors)
	*p = x
	return p
}

func (x Errors) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Errors) Descriptor() protoreflect.EnumDescriptor {
	return file_rmtp_proto_enumTypes[0].Descriptor()
}

func (Errors) Type() protoreflect.EnumType {
	return &file_rmtp_proto_enumTypes[0]
}

func (x Errors) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Errors.Descriptor instead.
func (Errors) EnumDescriptor() ([]byte, []int) {
	return file_rmtp_proto_rawDescGZIP(), []int{0}
}

type State int32

const (
	State_READY   State = 0
	State_WAITING State = 1
)

// Enum value maps for State.
var (
	State_name = map[int32]string{
		0: "READY",
		1: "WAITING",
	}
	State_value = map[string]int32{
		"READY":   0,
		"WAITING": 1,
	}
)

func (x State) Enum() *State {
	p := new(State)
	*p = x
	return p
}

func (x State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (State) Descriptor() protoreflect.EnumDescriptor {
	return file_rmtp_proto_enumTypes[1].Descriptor()
}

func (State) Type() protoreflect.EnumType {
	return &file_rmtp_proto_enumTypes[1]
}

func (x State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use State.Descriptor instead.
func (State) EnumDescriptor() ([]byte, []int) {
	return file_rmtp_proto_rawDescGZIP(), []int{1}
}

type Requests int32

const (
	Requests_STATE Requests = 0
)

// Enum value maps for Requests.
var (
	Requests_name = map[int32]string{
		0: "STATE",
	}
	Requests_value = map[string]int32{
		"STATE": 0,
	}
)

func (x Requests) Enum() *Requests {
	p := new(Requests)
	*p = x
	return p
}

func (x Requests) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Requests) Descriptor() protoreflect.EnumDescriptor {
	return file_rmtp_proto_enumTypes[2].Descriptor()
}

func (Requests) Type() protoreflect.EnumType {
	return &file_rmtp_proto_enumTypes[2]
}

func (x Requests) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Requests.Descriptor instead.
func (Requests) EnumDescriptor() ([]byte, []int) {
	return file_rmtp_proto_rawDescGZIP(), []int{2}
}

type Version struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Major         int32                  `protobuf:"varint,1,opt,name=major,proto3" json:"major,omitempty"`
	Minor         int32                  `protobuf:"varint,2,opt,name=minor,proto3" json:"minor,omitempty"`
	Patch         int32                  `protobuf:"varint,3,opt,name=patch,proto3" json:"patch,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Version) Reset() {
	*x = Version{}
	mi := &file_rmtp_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Version) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Version) ProtoMessage() {}

func (x *Version) ProtoReflect() protoreflect.Message {
	mi := &file_rmtp_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Version.ProtoReflect.Descriptor instead.
func (*Version) Descriptor() ([]byte, []int) {
	return file_rmtp_proto_rawDescGZIP(), []int{0}
}

func (x *Version) GetMajor() int32 {
	if x != nil {
		return x.Major
	}
	return 0
}

func (x *Version) GetMinor() int32 {
	if x != nil {
		return x.Minor
	}
	return 0
}

func (x *Version) GetPatch() int32 {
	if x != nil {
		return x.Patch
	}
	return 0
}

type FileMetadata struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileName      string                 `protobuf:"bytes,1,opt,name=fileName,proto3" json:"fileName,omitempty"`
	FileSize      int32                  `protobuf:"varint,2,opt,name=fileSize,proto3" json:"fileSize,omitempty"`
	ChunkSize     int32                  `protobuf:"varint,3,opt,name=chunkSize,proto3" json:"chunkSize,omitempty"`
	TotalChunks   int32                  `protobuf:"varint,4,opt,name=totalChunks,proto3" json:"totalChunks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileMetadata) Reset() {
	*x = FileMetadata{}
	mi := &file_rmtp_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileMetadata) ProtoMessage() {}

func (x *FileMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_rmtp_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileMetadata.ProtoReflect.Descriptor instead.
func (*FileMetadata) Descriptor() ([]byte, []int) {
	return file_rmtp_proto_rawDescGZIP(), []int{1}
}

func (x *FileMetadata) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *FileMetadata) GetFileSize() int32 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *FileMetadata) GetChunkSize() int32 {
	if x != nil {
		return x.ChunkSize
	}
	return 0
}

func (x *FileMetadata) GetTotalChunks() int32 {
	if x != nil {
		return x.TotalChunks
	}
	return 0
}

type ServerInit struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Version       *Version               `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	FileMetadata  *FileMetadata          `protobuf:"bytes,2,opt,name=fileMetadata,proto3" json:"fileMetadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServerInit) Reset() {
	*x = ServerInit{}
	mi := &file_rmtp_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServerInit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerInit) ProtoMessage() {}

func (x *ServerInit) ProtoReflect() protoreflect.Message {
	mi := &file_rmtp_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerInit.ProtoReflect.Descriptor instead.
func (*ServerInit) Descriptor() ([]byte, []int) {
	return file_rmtp_proto_rawDescGZIP(), []int{2}
}

func (x *ServerInit) GetVersion() *Version {
	if x != nil {
		return x.Version
	}
	return nil
}

func (x *ServerInit) GetFileMetadata() *FileMetadata {
	if x != nil {
		return x.FileMetadata
	}
	return nil
}

type ClientInit struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Version       *Version               `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClientInit) Reset() {
	*x = ClientInit{}
	mi := &file_rmtp_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClientInit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientInit) ProtoMessage() {}

func (x *ClientInit) ProtoReflect() protoreflect.Message {
	mi := &file_rmtp_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientInit.ProtoReflect.Descriptor instead.
func (*ClientInit) Descriptor() ([]byte, []int) {
	return file_rmtp_proto_rawDescGZIP(), []int{3}
}

func (x *ClientInit) GetVersion() *Version {
	if x != nil {
		return x.Version
	}
	return nil
}

type AcknowledgementMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MessageId     int32                  `protobuf:"varint,1,opt,name=messageId,proto3" json:"messageId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AcknowledgementMessage) Reset() {
	*x = AcknowledgementMessage{}
	mi := &file_rmtp_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AcknowledgementMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcknowledgementMessage) ProtoMessage() {}

func (x *AcknowledgementMessage) ProtoReflect() protoreflect.Message {
	mi := &file_rmtp_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcknowledgementMessage.ProtoReflect.Descriptor instead.
func (*AcknowledgementMessage) Descriptor() ([]byte, []int) {
	return file_rmtp_proto_rawDescGZIP(), []int{4}
}

func (x *AcknowledgementMessage) GetMessageId() int32 {
	if x != nil {
		return x.MessageId
	}
	return 0
}

type ErrorMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Error         Errors                 `protobuf:"varint,1,opt,name=error,proto3,enum=pb.Errors" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ErrorMessage) Reset() {
	*x = ErrorMessage{}
	mi := &file_rmtp_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ErrorMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorMessage) ProtoMessage() {}

func (x *ErrorMessage) ProtoReflect() protoreflect.Message {
	mi := &file_rmtp_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorMessage.ProtoReflect.Descriptor instead.
func (*ErrorMessage) Descriptor() ([]byte, []int) {
	return file_rmtp_proto_rawDescGZIP(), []int{5}
}

func (x *ErrorMessage) GetError() Errors {
	if x != nil {
		return x.Error
	}
	return Errors_TAMPERED
}

type StreamInit struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	State         State                  `protobuf:"varint,1,opt,name=state,proto3,enum=pb.State" json:"state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamInit) Reset() {
	*x = StreamInit{}
	mi := &file_rmtp_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamInit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamInit) ProtoMessage() {}

func (x *StreamInit) ProtoReflect() protoreflect.Message {
	mi := &file_rmtp_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamInit.ProtoReflect.Descriptor instead.
func (*StreamInit) Descriptor() ([]byte, []int) {
	return file_rmtp_proto_rawDescGZIP(), []int{6}
}

func (x *StreamInit) GetState() State {
	if x != nil {
		return x.State
	}
	return State_READY
}

type Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	State         Requests               `protobuf:"varint,1,opt,name=state,proto3,enum=pb.Requests" json:"state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Request) Reset() {
	*x = Request{}
	mi := &file_rmtp_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request) ProtoMessage() {}

func (x *Request) ProtoReflect() protoreflect.Message {
	mi := &file_rmtp_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request.ProtoReflect.Descriptor instead.
func (*Request) Descriptor() ([]byte, []int) {
	return file_rmtp_proto_rawDescGZIP(), []int{7}
}

func (x *Request) GetState() Requests {
	if x != nil {
		return x.State
	}
	return Requests_STATE
}

type Stream struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChunkId       int32                  `protobuf:"varint,1,opt,name=chunkId,proto3" json:"chunkId,omitempty"`
	Data          []byte                 `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Hash          []byte                 `protobuf:"bytes,3,opt,name=hash,proto3" json:"hash,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Stream) Reset() {
	*x = Stream{}
	mi := &file_rmtp_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Stream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stream) ProtoMessage() {}

func (x *Stream) ProtoReflect() protoreflect.Message {
	mi := &file_rmtp_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stream.ProtoReflect.Descriptor instead.
func (*Stream) Descriptor() ([]byte, []int) {
	return file_rmtp_proto_rawDescGZIP(), []int{8}
}

func (x *Stream) GetChunkId() int32 {
	if x != nil {
		return x.ChunkId
	}
	return 0
}

func (x *Stream) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Stream) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

type Frame struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	MessageId *int32                 `protobuf:"varint,1,opt,name=messageId,proto3,oneof" json:"messageId,omitempty"`
	Retry     *bool                  `protobuf:"varint,2,opt,name=retry,proto3,oneof" json:"retry,omitempty"`
	// Types that are valid to be assigned to Payload:
	//
	//	*Frame_ServerInit
	//	*Frame_ClientInit
	//	*Frame_Acknowledgement
	//	*Frame_ErrorMessage
	//	*Frame_SreamInit
	//	*Frame_Stream
	//	*Frame_Request
	Payload       isFrame_Payload `protobuf_oneof:"payload"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Frame) Reset() {
	*x = Frame{}
	mi := &file_rmtp_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Frame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Frame) ProtoMessage() {}

func (x *Frame) ProtoReflect() protoreflect.Message {
	mi := &file_rmtp_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Frame.ProtoReflect.Descriptor instead.
func (*Frame) Descriptor() ([]byte, []int) {
	return file_rmtp_proto_rawDescGZIP(), []int{9}
}

func (x *Frame) GetMessageId() int32 {
	if x != nil && x.MessageId != nil {
		return *x.MessageId
	}
	return 0
}

func (x *Frame) GetRetry() bool {
	if x != nil && x.Retry != nil {
		return *x.Retry
	}
	return false
}

func (x *Frame) GetPayload() isFrame_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *Frame) GetServerInit() *ServerInit {
	if x != nil {
		if x, ok := x.Payload.(*Frame_ServerInit); ok {
			return x.ServerInit
		}
	}
	return nil
}

func (x *Frame) GetClientInit() *ClientInit {
	if x != nil {
		if x, ok := x.Payload.(*Frame_ClientInit); ok {
			return x.ClientInit
		}
	}
	return nil
}

func (x *Frame) GetAcknowledgement() *AcknowledgementMessage {
	if x != nil {
		if x, ok := x.Payload.(*Frame_Acknowledgement); ok {
			return x.Acknowledgement
		}
	}
	return nil
}

func (x *Frame) GetErrorMessage() *ErrorMessage {
	if x != nil {
		if x, ok := x.Payload.(*Frame_ErrorMessage); ok {
			return x.ErrorMessage
		}
	}
	return nil
}

func (x *Frame) GetSreamInit() *StreamInit {
	if x != nil {
		if x, ok := x.Payload.(*Frame_SreamInit); ok {
			return x.SreamInit
		}
	}
	return nil
}

func (x *Frame) GetStream() *Stream {
	if x != nil {
		if x, ok := x.Payload.(*Frame_Stream); ok {
			return x.Stream
		}
	}
	return nil
}

func (x *Frame) GetRequest() *Request {
	if x != nil {
		if x, ok := x.Payload.(*Frame_Request); ok {
			return x.Request
		}
	}
	return nil
}

type isFrame_Payload interface {
	isFrame_Payload()
}

type Frame_ServerInit struct {
	ServerInit *ServerInit `protobuf:"bytes,3,opt,name=serverInit,proto3,oneof"`
}

type Frame_ClientInit struct {
	ClientInit *ClientInit `protobuf:"bytes,4,opt,name=clientInit,proto3,oneof"`
}

type Frame_Acknowledgement struct {
	Acknowledgement *AcknowledgementMessage `protobuf:"bytes,5,opt,name=acknowledgement,proto3,oneof"`
}

type Frame_ErrorMessage struct {
	ErrorMessage *ErrorMessage `protobuf:"bytes,6,opt,name=errorMessage,proto3,oneof"`
}

type Frame_SreamInit struct {
	SreamInit *StreamInit `protobuf:"bytes,7,opt,name=sreamInit,proto3,oneof"`
}

type Frame_Stream struct {
	Stream *Stream `protobuf:"bytes,8,opt,name=stream,proto3,oneof"`
}

type Frame_Request struct {
	Request *Request `protobuf:"bytes,9,opt,name=request,proto3,oneof"`
}

func (*Frame_ServerInit) isFrame_Payload() {}

func (*Frame_ClientInit) isFrame_Payload() {}

func (*Frame_Acknowledgement) isFrame_Payload() {}

func (*Frame_ErrorMessage) isFrame_Payload() {}

func (*Frame_SreamInit) isFrame_Payload() {}

func (*Frame_Stream) isFrame_Payload() {}

func (*Frame_Request) isFrame_Payload() {}

var File_rmtp_proto protoreflect.FileDescriptor

var file_rmtp_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x72, 0x6d, 0x74, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62,
	0x22, 0x4b, 0x0a, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6d,
	0x61, 0x6a, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6d, 0x61, 0x6a, 0x6f,
	0x72, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x69, 0x6e, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x6d, 0x69, 0x6e, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x74, 0x63, 0x68,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x70, 0x61, 0x74, 0x63, 0x68, 0x22, 0x86, 0x01,
	0x0a, 0x0c, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1a,
	0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69,
	0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x66, 0x69,
	0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x53,
	0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x68, 0x75, 0x6e, 0x6b,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x68, 0x75,
	0x6e, 0x6b, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x43, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x22, 0x69, 0x0a, 0x0a, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x49, 0x6e, 0x69, 0x74, 0x12, 0x25, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x0c, 0x66,
	0x69, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x52, 0x0c, 0x66, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x33, 0x0a, 0x0a, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x69, 0x74, 0x12,
	0x25, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x36, 0x0a, 0x16, 0x41, 0x63, 0x6b, 0x6e, 0x6f, 0x77,
	0x6c, 0x65, 0x64, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x22, 0x30,
	0x0a, 0x0c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x20,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0a, 0x2e,
	0x70, 0x62, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x22, 0x2d, 0x0a, 0x0a, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x69, 0x74, 0x12, 0x1f,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x09, 0x2e,
	0x70, 0x62, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22,
	0x2d, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x4a,
	0x0a, 0x06, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x75, 0x6e,
	0x6b, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x68, 0x75, 0x6e, 0x6b,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x22, 0xcb, 0x03, 0x0a, 0x05, 0x46,
	0x72, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x72, 0x65, 0x74, 0x72, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x48, 0x02, 0x52, 0x05, 0x72, 0x65, 0x74, 0x72, 0x79, 0x88,
	0x01, 0x01, 0x12, 0x30, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x69, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x49, 0x6e, 0x69, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x49, 0x6e, 0x69, 0x74, 0x12, 0x30, 0x0a, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x6e,
	0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x69, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x49, 0x6e, 0x69, 0x74, 0x12, 0x46, 0x0a, 0x0f, 0x61, 0x63, 0x6b, 0x6e, 0x6f, 0x77,
	0x6c, 0x65, 0x64, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0f, 0x61,
	0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x36,
	0x0a, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2e, 0x0a, 0x09, 0x73, 0x72, 0x65, 0x61, 0x6d, 0x49,
	0x6e, 0x69, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x69, 0x74, 0x48, 0x00, 0x52, 0x09, 0x73, 0x72, 0x65,
	0x61, 0x6d, 0x49, 0x6e, 0x69, 0x74, 0x12, 0x24, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x48, 0x00, 0x52, 0x06, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x27, 0x0a, 0x07,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e,
	0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x07, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x42, 0x08,
	0x0a, 0x06, 0x5f, 0x72, 0x65, 0x74, 0x72, 0x79, 0x2a, 0xdd, 0x01, 0x0a, 0x06, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x73, 0x12, 0x0c, 0x0a, 0x08, 0x54, 0x41, 0x4d, 0x50, 0x45, 0x52, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x16, 0x0a, 0x12, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x54, 0x49, 0x4d, 0x45, 0x4f, 0x55, 0x54, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x43, 0x4f, 0x4e,
	0x4e, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x52, 0x4f, 0x50, 0x4f, 0x55, 0x54, 0x10,
	0x02, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x48, 0x55, 0x4e, 0x4b, 0x5f, 0x4d, 0x49, 0x53, 0x53, 0x49,
	0x4e, 0x47, 0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x4e, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45,
	0x54, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x10, 0x04, 0x12, 0x13, 0x0a, 0x0f, 0x42, 0x55, 0x46,
	0x46, 0x45, 0x52, 0x5f, 0x4f, 0x56, 0x45, 0x52, 0x46, 0x4c, 0x4f, 0x57, 0x10, 0x05, 0x12, 0x10,
	0x0a, 0x0c, 0x48, 0x49, 0x47, 0x48, 0x5f, 0x4c, 0x41, 0x54, 0x45, 0x4e, 0x43, 0x59, 0x10, 0x06,
	0x12, 0x15, 0x0a, 0x11, 0x44, 0x55, 0x50, 0x4c, 0x49, 0x43, 0x41, 0x54, 0x45, 0x5f, 0x4d, 0x45,
	0x53, 0x53, 0x41, 0x47, 0x45, 0x10, 0x07, 0x12, 0x1b, 0x0a, 0x17, 0x41, 0x43, 0x4b, 0x4e, 0x4f,
	0x57, 0x4c, 0x45, 0x44, 0x47, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x55,
	0x52, 0x45, 0x10, 0x08, 0x12, 0x12, 0x0a, 0x0e, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c,
	0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x09, 0x2a, 0x1f, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x09, 0x0a, 0x05, 0x52, 0x45, 0x41, 0x44, 0x59, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07,
	0x57, 0x41, 0x49, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x2a, 0x15, 0x0a, 0x08, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x73, 0x12, 0x09, 0x0a, 0x05, 0x53, 0x54, 0x41, 0x54, 0x45, 0x10, 0x00,
	0x42, 0x09, 0x5a, 0x07, 0x2e, 0x2f, 0x72, 0x6d, 0x74, 0x70, 0x2f, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_rmtp_proto_rawDescOnce sync.Once
	file_rmtp_proto_rawDescData = file_rmtp_proto_rawDesc
)

func file_rmtp_proto_rawDescGZIP() []byte {
	file_rmtp_proto_rawDescOnce.Do(func() {
		file_rmtp_proto_rawDescData = protoimpl.X.CompressGZIP(file_rmtp_proto_rawDescData)
	})
	return file_rmtp_proto_rawDescData
}

var file_rmtp_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_rmtp_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_rmtp_proto_goTypes = []any{
	(Errors)(0),                    // 0: pb.Errors
	(State)(0),                     // 1: pb.State
	(Requests)(0),                  // 2: pb.Requests
	(*Version)(nil),                // 3: pb.Version
	(*FileMetadata)(nil),           // 4: pb.FileMetadata
	(*ServerInit)(nil),             // 5: pb.ServerInit
	(*ClientInit)(nil),             // 6: pb.ClientInit
	(*AcknowledgementMessage)(nil), // 7: pb.AcknowledgementMessage
	(*ErrorMessage)(nil),           // 8: pb.ErrorMessage
	(*StreamInit)(nil),             // 9: pb.StreamInit
	(*Request)(nil),                // 10: pb.Request
	(*Stream)(nil),                 // 11: pb.Stream
	(*Frame)(nil),                  // 12: pb.Frame
}
var file_rmtp_proto_depIdxs = []int32{
	3,  // 0: pb.ServerInit.version:type_name -> pb.Version
	4,  // 1: pb.ServerInit.fileMetadata:type_name -> pb.FileMetadata
	3,  // 2: pb.ClientInit.version:type_name -> pb.Version
	0,  // 3: pb.ErrorMessage.error:type_name -> pb.Errors
	1,  // 4: pb.StreamInit.state:type_name -> pb.State
	2,  // 5: pb.Request.state:type_name -> pb.Requests
	5,  // 6: pb.Frame.serverInit:type_name -> pb.ServerInit
	6,  // 7: pb.Frame.clientInit:type_name -> pb.ClientInit
	7,  // 8: pb.Frame.acknowledgement:type_name -> pb.AcknowledgementMessage
	8,  // 9: pb.Frame.errorMessage:type_name -> pb.ErrorMessage
	9,  // 10: pb.Frame.sreamInit:type_name -> pb.StreamInit
	11, // 11: pb.Frame.stream:type_name -> pb.Stream
	10, // 12: pb.Frame.request:type_name -> pb.Request
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_rmtp_proto_init() }
func file_rmtp_proto_init() {
	if File_rmtp_proto != nil {
		return
	}
	file_rmtp_proto_msgTypes[9].OneofWrappers = []any{
		(*Frame_ServerInit)(nil),
		(*Frame_ClientInit)(nil),
		(*Frame_Acknowledgement)(nil),
		(*Frame_ErrorMessage)(nil),
		(*Frame_SreamInit)(nil),
		(*Frame_Stream)(nil),
		(*Frame_Request)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rmtp_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_rmtp_proto_goTypes,
		DependencyIndexes: file_rmtp_proto_depIdxs,
		EnumInfos:         file_rmtp_proto_enumTypes,
		MessageInfos:      file_rmtp_proto_msgTypes,
	}.Build()
	File_rmtp_proto = out.File
	file_rmtp_proto_rawDesc = nil
	file_rmtp_proto_goTypes = nil
	file_rmtp_proto_depIdxs = nil
}
